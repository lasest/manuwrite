from PyQt5.QtWidgets import QDialog, QMessageBox
from PyQt5.QtCore import pyqtSlot

from ui_forms.ui_add_heading_dialog import Ui_AddHeadingDialog
from components.settings_manager import SettingsManager
import common


class AddHeadingDialog(QDialog):

    def __init__(self, settings_manager: SettingsManager, heading_level: int, used_identifiers: dict):
        super().__init__()

        self.ui = Ui_AddHeadingDialog()
        self.ui.setupUi(self)

        # Setting attributes
        self.SettingsManager = settings_manager
        self.used_identifiers = used_identifiers
        self.heading_tag = ""

        # Read settings
        self.read_settings()

        # Prepare ui
        self.ui.HeadingLevelCombobox.setCurrentIndex(heading_level - 1)

        if self.ui.AutogenIdentifierRadioButton.isChecked() or self.ui.NoIdentifierRadioButton.isChecked():
            self.ui.IdentifierLineEdit.setEnabled(False)
            self.ui.TextLineEdit.setFocus()
        else:
            self.ui.IdentifierLineEdit.setEnabled(True)
            self.ui.IdentifierLineEdit.setFocus()

    def read_settings(self) -> None:
        """Read settings from the SettingsManager"""

        autogen_identifier = self.SettingsManager.get_setting_value("AddHeadingDialog/autogen identifier")
        if autogen_identifier == 0:
            self.ui.AutogenIdentifierRadioButton.setChecked(True)
        elif autogen_identifier == 1:
            self.ui.ManualIdentifierRadioButton.setChecked(True)
        else:
            self.ui.NoIdentifierRadioButton.setChecked(True)

        self.ui.AutonumberCheckbox.setCheckState(self.SettingsManager.get_setting_value("AddHeadingDialog/autonumber"))

    def write_settings(self) -> None:
        """Write settings to the SettingsManager"""

        autogen_identifier = -1
        if self.ui.AutogenIdentifierRadioButton.isChecked():
            autogen_identifier = 0
        elif self.ui.ManualIdentifierRadioButton.isChecked():
            autogen_identifier = 1
        else:
            autogen_identifier = 2

        self.SettingsManager.set_setting_value("AddHeadingDialog/autogen identifier", autogen_identifier)
        self.SettingsManager.set_setting_value("AddHeadingDialog/autonumber", self.ui.AutonumberCheckbox.checkState())

    def accept(self) -> None:
        """Generates the heading tag and saves it to the dialogs's attribute before closing"""

        # Add hashes and heading text
        tag = ""
        tag += "#" * int(self.ui.HeadingLevelCombobox.currentText()) + " "
        tag += self.ui.TextLineEdit.text()

        # Check if additional attributes need to be specified
        add_attributes = True
        if self.ui.NoIdentifierRadioButton.isChecked() and self.ui.AutonumberCheckbox.checkState() is False:
            add_attributes = False

        # Add attributes if they are required
        if add_attributes:
            tag += "\t{"

            # Generate identifier
            identifier = ""
            prefix = ""
            if self.ui.AutonumberCheckbox.checkState():
                prefix = "sec:"

            if self.ui.AutogenIdentifierRadioButton.isChecked():
                identifier = common.generate_identifier(self.ui.TextLineEdit.text(), prefix, self.used_identifiers)
            else:
                identifier += self.ui.IdentifierLineEdit.text()

            if not common.is_valid_identifier(identifier, allow_empty=True):
                QMessageBox.warning(self, "Identifier invalid",
                                    "Identifier cannot contain spaces or tabulation characters")
                return

            if identifier in self.used_identifiers:
                QMessageBox.warning(self, "Identifier already used",
                                    "The identifier you specified is already used in " +
                                    "the current document or project. Please specify a unique identifier")
                return

            # Add identifier to tag
            if identifier:
                tag += "#" + identifier

            tag += "}"

        self.heading_tag = tag
        self.write_settings()
        super().accept()

    @pyqtSlot(bool)
    def on_AutogenIdentifierRadioButton_toggled(self, checked: bool):
        """Disable IdentifierLineEdit if the user wants the identifier to be autogenerated"""
        if checked:
            self.ui.IdentifierLineEdit.setEnabled(False)
            self.ui.IdentifierLineEdit.clear()

    @pyqtSlot(bool)
    def on_ManualIdentifierRadioButton_toggled(self, checked: bool):
        """Enable IdentifierLineEdit if the user wants to enter the identifier manually"""
        if checked:
            self.ui.IdentifierLineEdit.setEnabled(True)

    @pyqtSlot(bool)
    def on_NoIdentifierRadioButton_toggled(self, checked: bool):
        """Disable IdentifierLineEdit if the user wants to have no identifier"""
        if checked:
            self.ui.IdentifierLineEdit.setEnabled(False)
            self.ui.IdentifierLineEdit.clear()
